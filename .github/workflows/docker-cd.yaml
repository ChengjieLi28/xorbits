name: Xorbits CD for DockerHub

on:
  schedule:
    - cron: '0 8 * * *'
  push:
    tags:
      - '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        shell: bash
        env:
          DOCKER_ORG: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          if [[ "$GITHUB_REF" =~ ^"refs/tags/" ]]; then
            export GITHUB_TAG_REF="$GITHUB_REF"
            export GIT_TAG=$(echo "$GITHUB_REF" | sed -e "s/refs\/tags\///g")
          else
            export GIT_BRANCH=$(echo "$GITHUB_REF" | sed -e "s/refs\/heads\///g")
          fi
          
          if [[ -n "$GIT_TAG" ]]; then
            BRANCHES="$GIT_TAG"
            echo "Will handle tag $BRANCHES"
          else
            MAINBRANCH=$(git rev-parse --abbrev-ref HEAD)
            BRANCHES=$(git branch -r --list 'origin/v*' | sed 's/ *origin\///g')
            BRANCHES="$MAINBRANCH $BRANCHES"
          
            echo "Will handle branches:"
            for branch in $BRANCHES; do
              echo "  $branch"
            done
          fi
          
          for branch in $BRANCHES; do
            if [[ -n "$GIT_TAG" ]]; then
              export IMAGE_TAG="$GIT_TAG"
            else
              echo ""
              git checkout $branch
              git log --pretty=format:"%h - %an, %cd : %s" --since=25.hours
              # consider schedule delay of Github Actions, some margin needed.
              if [[ ! "$(git log --since=25.hours)" ]]; then
                echo "No recent commits on branch $branch found, will skip building image."
                continue
              fi
              export IMAGE_TAG="nightly-$branch"
            fi
            docker build -t "$DOCKER_ORG/xorbits:$IMAGE_TAG" --progress=plain -f python/xorbits/deploy/docker/Dockerfile .
            docker push "$DOCKER_ORG/xorbits:$IMAGE_TAG"
          done
